<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hjcompany.server.mapper.UserMapper">

    <!-- 
    type: 어떤 객체에 데이터를 담을 것인지, 자바 객체의 클래스명
    id: 이 resultMap을 무엇이라고 부를 것인지, resultMap 자체를 식별하기 위한 고유한 이름 
	-->

    <!-- Users 매핑 : Users클래스에 담고 userMap라고 부르겠다 -->
    <resultMap type="Users" id="userMap">
        <id property="userId" column="user_id" />
        
        <result property="userId" column="user_id" />
        <result property="userPw" column="user_pw" />
        <result property="name" column="name" />
        <result property="email" column="email" />
        <result property="enabled" column="enabled" />
        <result property="regDate" column="reg_date" />
        <result property="updDate" column="upd_date" />
        <result property="no" column="no" />
        
        <collection property="authList" resultMap="authMap"></collection>
    </resultMap>
        
    <!-- UserAuth 매핑 -->
    <resultMap type="UserAuth" id="authMap">
        <result property="userId" column="user_id" />
        <result property="auth" column="auth" />
    </resultMap>

    <!-- 회원 등록 -->
    <insert id="insert">
        INSERT INTO user( user_id, user_pw, name, email, no)
        VALUES ( #{userId}, #{userPw}, #{name} ,#{email}, (SELECT ifnull(MAX(b.no),0)+1 AS num from user b))
    </insert>

    <!-- 회원 조회 -->
    <select id="select" resultType="Users">
        SELECT *
        FROM user
        WHERE no = #{no}
    </select>

    <!-- 회원 조회 - id -->
    <select id="login" resultMap="userMap">
        SELECT u.no
            ,u.user_id
            ,user_pw
            ,name
            ,email
            ,enabled
            ,reg_date
            ,upd_date
            ,auth
        FROM user u LEFT OUTER JOIN user_auth auth 
        ON u.user_id = auth.user_id
        WHERE u.user_id = #{username}
    </select>

    <!-- 회원 권한 등록 -->
    <insert id="insertAuth">
        INSERT INTO user_auth( user_id, auth ) 
        VALUES ( #{userId}, #{auth} )
    </insert>

    <!-- 회원 수정 -->
    <update id="update">
        UPDATE user
           SET user_id = #{userId}
              ,user_pw = #{userPw}
              ,name = #{name}
              ,email = #{email}
        WHERE user_id = #{userId}
    </update>

    <!-- 회원 삭제 -->
    <delete id="delete">
        DELETE FROM user
        WHERE user_id = #{userId}
    </delete>
    
</mapper>